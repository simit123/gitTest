git rm -r --cached <文件名> //将文件从git版本控制中移除
git status //获取当前仓库的状态
git remote add origin <远程仓库地址> //连接远程仓库
git push -u origin master //第一次推送到远程master仓库 远程仓库是空的 
git diff //查看本次修改内容
git log //查看日志
git log --pretty=oneline //一行显示日志

//版本回退命令
git reset --hard <HEAD^(上个版本)HEAD^^(上上个版本)HEAD~100(第几个版本) 或者 写commit id> //回退到某个版本

git reflog //当回退到上一个版本后想回到最新的版本但是找不到最新版本的commit id 此命令可列出所有的commit id

//git操作逻辑 git和svn不同的是 git 有暂存区的概念 
git add 是把文件修改添加到暂存区
git commit 是把暂存区的所有内容提交到当前分支
git push 是把当前分支的所有内容提交到远程分支
git diff HEAD -- <文件> //查看工作区和版本库里面最新版本的区别

git checkout -- <文件>
//
命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：

一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；

一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。

总之，就是让这个文件回到最近一次git commit或git add时的状态。

//如果已经将文件add到暂存区但是没有commit 如何恢复呢？
git reset HEAD <文件>
然后执行
git checkout -- <文件>
这样就可以将暂存区和工作区都恢复到之前的状态

//删除文件
rm <文件> //删除文件
git rm <文件> 删除 然后 git commit 从版本库中删除
若是删错了 没有commit
git checkout -- <文件> 可以把文件恢复到最新版本

git remote add origin git@server-name:path/repo-name.git //关联远程仓库

git checkout -b <分支名> //创建一个新的分支并且切换到此分支
git branch <分支名> //创建新分支
git checkout <分支名> //切换到此分支
git branch //查看所有分支

